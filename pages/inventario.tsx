import { useContext, useState } from 'react';
import { ModalMovimiento } from '@components/ModalMovimiento';
import { TablaInventario } from '@components/TablaInventario';
import { PrivateRoute } from '@components/PrivateRoute';
import { Layout } from '@layouts/Layout';
import Head from 'next/head';
import { Material } from '@prisma/client';
import { GET_MATERIALS_BY_USER } from '@graphql/client/materials';
import { useQuery } from '@apollo/client';
import { GET_MOVEMENTS_BY_MATERIAL } from '@graphql/client/movements';
import { MovementWithMovementType } from 'types';

import { LayoutContext } from 'contexts/LayoutContext';
import { MuiSelect } from '@components/material/MuiSelect';

export default function Inventario() {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [material, setMaterial] = useState<string>('');
  const { showLeftMenu } = useContext(LayoutContext);

  const handleOpenModal = () => {
    setIsModalOpen(true);
  };

  const { data: materials } = useQuery<{
    materialsByUser: Material[];
  }>(GET_MATERIALS_BY_USER, {
    fetchPolicy: 'cache-first',
  });

  const {
    data: movements,
    loading,
    error,
    refetch,
  } = useQuery<{
    movementsByMaterial: MovementWithMovementType[];
  }>(GET_MOVEMENTS_BY_MATERIAL, {
    fetchPolicy: 'cache-first',
    variables: {
      materialId: material,
    },
  });

  const handleSelectMaterial = ({
    target: { value },
  }: React.ChangeEvent<HTMLSelectElement>) => {
    setMaterial(value);
    if (value === '') return;
    refetch();
  };

  const handleCloseModal = () => {
    setIsModalOpen(false);
    refetch();
  };

  return (
    <PrivateRoute>

      <>
        <Layout>
          <Head>
            <title>Movimientos</title>
            <meta name='description' content='Generated by create next app' />
            <meta name='viewport' content='width=device-width, initial-scale=1' />
            <link rel='icon' href='/favicon.ico' />
          </Head>
          <div className='h-full'>

            {/* TITLE */}
            <div className='text-center font-poppins text-3xl md:text-5xl pb-3'>Inventarios</div>

            {/* ACTION BUTTONS */}
            <div className='flex flex-wrap w-full justify-center gap-4'>
              
              <select
                value={material}
                onChange={handleSelectMaterial}
                className='h-16 w-64 rounded-lg border-2 border-black bg-green-200 font-poppins text-xl hover:bg-green-300 focus:border-green-500 focus:outline-none'
              >
                <option value='' disabled>
                  Selecciona un material
                </option>
                {materials?.materialsByUser?.map((material) => (
                  <option key={material.id} value={material.id}>
                    {material.name}
                  </option>
                ))}
              </select>

              <MuiSelect
                placeholder='Selecciona un material'
                // selectOptions={[materials?.materialsByUser]}
                selectOptions={[{ name: "Material 1" }, { name: "Material KL 2" }] as Material[]}
                displayFn={(i: Material) => i.name}
                onValueChange={(e) => { console.log("Option changed --> ", e) }}
              />

              <button
                onClick={handleOpenModal}
                className='h-[65px] w-[226px] rounded-xl bg-[#004737] font-poppins text-xl text-white shadow-md transition duration-500 ease-in-out hover:bg-[#007f5f]'
              >
                Agregar movimiento
              </button>

            </div>

            {/* TABLE */}
            <div className='flex overflow-y-auto px-4'>
              {material && (
                <TablaInventario
                  data={movements?.movementsByMaterial}
                  loading={loading}
                  error={error}
                />
              )}
            </div>
          </div>

          <ModalMovimiento isOpen={isModalOpen} onClose={handleCloseModal} />

        </Layout>
      </>

    </PrivateRoute>
  );
};


